{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, w as writeTask, e as readTask, h, f as getElement, H as Host } from './index-adfb2000.js';\nimport { f as findClosestIonContent, p as printIonContentErrorMsg, g as getScrollElement } from './index-746a238e.js';\nimport { b as getIonMode, c as config } from './ionic-global-9080266a.js';\nimport { E as ENABLE_HTML_CONTENT_DEFAULT, a as sanitizeDOMString } from './config-96c9ace3.js';\nimport './helpers-3379ba19.js';\nimport './index-595d62c9.js';\n\nconst infiniteScrollCss = \"ion-infinite-scroll{display:none;width:100%}.infinite-scroll-enabled{display:block}\";\n\nconst InfiniteScroll = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionInfinite = createEvent(this, \"ionInfinite\", 7);\n    this.thrPx = 0;\n    this.thrPc = 0;\n    this.didFire = false;\n    this.isBusy = false;\n    this.onScroll = () => {\n      const scrollEl = this.scrollEl;\n      if (!scrollEl || !this.canStart()) {\n        return 1;\n      }\n      const infiniteHeight = this.el.offsetHeight;\n      if (infiniteHeight === 0) {\n        // if there is no height of this element then do nothing\n        return 2;\n      }\n      const scrollTop = scrollEl.scrollTop;\n      const scrollHeight = scrollEl.scrollHeight;\n      const height = scrollEl.offsetHeight;\n      const threshold = this.thrPc !== 0 ? height * this.thrPc : this.thrPx;\n      const distanceFromInfinite = this.position === 'bottom'\n        ? scrollHeight - infiniteHeight - scrollTop - threshold - height\n        : scrollTop - infiniteHeight - threshold;\n      if (distanceFromInfinite < 0) {\n        if (!this.didFire) {\n          this.isLoading = true;\n          this.didFire = true;\n          this.ionInfinite.emit();\n          return 3;\n        }\n      }\n      else {\n        this.didFire = false;\n      }\n      return 4;\n    };\n    this.isLoading = false;\n    this.threshold = '15%';\n    this.disabled = false;\n    this.position = 'bottom';\n  }\n  thresholdChanged() {\n    const val = this.threshold;\n    if (val.lastIndexOf('%') > -1) {\n      this.thrPx = 0;\n      this.thrPc = parseFloat(val) / 100;\n    }\n    else {\n      this.thrPx = parseFloat(val);\n      this.thrPc = 0;\n    }\n  }\n  disabledChanged() {\n    const disabled = this.disabled;\n    if (disabled) {\n      this.isLoading = false;\n      this.isBusy = false;\n    }\n    this.enableScrollEvents(!disabled);\n  }\n  async connectedCallback() {\n    const contentEl = findClosestIonContent(this.el);\n    if (!contentEl) {\n      printIonContentErrorMsg(this.el);\n      return;\n    }\n    this.scrollEl = await getScrollElement(contentEl);\n    this.thresholdChanged();\n    this.disabledChanged();\n    if (this.position === 'top') {\n      writeTask(() => {\n        if (this.scrollEl) {\n          this.scrollEl.scrollTop = this.scrollEl.scrollHeight - this.scrollEl.clientHeight;\n        }\n      });\n    }\n  }\n  disconnectedCallback() {\n    this.enableScrollEvents(false);\n    this.scrollEl = undefined;\n  }\n  /**\n   * Call `complete()` within the `ionInfinite` output event handler when\n   * your async operation has completed. For example, the `loading`\n   * state is while the app is performing an asynchronous operation,\n   * such as receiving more data from an AJAX request to add more items\n   * to a data list. Once the data has been received and UI updated, you\n   * then call this method to signify that the loading has completed.\n   * This method will change the infinite scroll's state from `loading`\n   * to `enabled`.\n   */\n  async complete() {\n    const scrollEl = this.scrollEl;\n    if (!this.isLoading || !scrollEl) {\n      return;\n    }\n    this.isLoading = false;\n    if (this.position === 'top') {\n      /**\n       * New content is being added at the top, but the scrollTop position stays the same,\n       * which causes a scroll jump visually. This algorithm makes sure to prevent this.\n       * (Frame 1)\n       *    - complete() is called, but the UI hasn't had time to update yet.\n       *    - Save the current content dimensions.\n       *    - Wait for the next frame using _dom.read, so the UI will be updated.\n       * (Frame 2)\n       *    - Read the new content dimensions.\n       *    - Calculate the height difference and the new scroll position.\n       *    - Delay the scroll position change until other possible dom reads are done using _dom.write to be performant.\n       * (Still frame 2, if I'm correct)\n       *    - Change the scroll position (= visually maintain the scroll position).\n       *    - Change the state to re-enable the InfiniteScroll.\n       *    - This should be after changing the scroll position, or it could\n       *    cause the InfiniteScroll to be triggered again immediately.\n       * (Frame 3)\n       *    Done.\n       */\n      this.isBusy = true;\n      // ******** DOM READ ****************\n      // Save the current content dimensions before the UI updates\n      const prev = scrollEl.scrollHeight - scrollEl.scrollTop;\n      // ******** DOM READ ****************\n      requestAnimationFrame(() => {\n        readTask(() => {\n          // UI has updated, save the new content dimensions\n          const scrollHeight = scrollEl.scrollHeight;\n          // New content was added on top, so the scroll position should be changed immediately to prevent it from jumping around\n          const newScrollTop = scrollHeight - prev;\n          // ******** DOM WRITE ****************\n          requestAnimationFrame(() => {\n            writeTask(() => {\n              scrollEl.scrollTop = newScrollTop;\n              this.isBusy = false;\n            });\n          });\n        });\n      });\n    }\n  }\n  canStart() {\n    return !this.disabled && !this.isBusy && !!this.scrollEl && !this.isLoading;\n  }\n  enableScrollEvents(shouldListen) {\n    if (this.scrollEl) {\n      if (shouldListen) {\n        this.scrollEl.addEventListener('scroll', this.onScroll);\n      }\n      else {\n        this.scrollEl.removeEventListener('scroll', this.onScroll);\n      }\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    const disabled = this.disabled;\n    return (h(Host, { class: {\n        [mode]: true,\n        'infinite-scroll-loading': this.isLoading,\n        'infinite-scroll-enabled': !disabled,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"threshold\": [\"thresholdChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nInfiniteScroll.style = infiniteScrollCss;\n\nconst infiniteScrollContentIosCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px;margin-top:4px;margin-bottom:0}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-ios .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-small-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\n\nconst infiniteScrollContentMdCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px;margin-top:4px;margin-bottom:0}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-md .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-small-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\n\nconst InfiniteScrollContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n    this.loadingSpinner = undefined;\n    this.loadingText = undefined;\n  }\n  componentDidLoad() {\n    if (this.loadingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.loadingSpinner = config.get('infiniteLoadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\n    }\n  }\n  renderLoadingText() {\n    const { customHTMLEnabled, loadingText } = this;\n    if (customHTMLEnabled) {\n      return h(\"div\", { class: \"infinite-loading-text\", innerHTML: sanitizeDOMString(loadingText) });\n    }\n    return h(\"div\", { class: \"infinite-loading-text\" }, this.loadingText);\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        // Used internally for styling\n        [`infinite-scroll-content-${mode}`]: true,\n      } }, h(\"div\", { class: \"infinite-loading\" }, this.loadingSpinner && (h(\"div\", { class: \"infinite-loading-spinner\" }, h(\"ion-spinner\", { name: this.loadingSpinner }))), this.loadingText !== undefined && this.renderLoadingText())));\n  }\n};\nInfiniteScrollContent.style = {\n  ios: infiniteScrollContentIosCss,\n  md: infiniteScrollContentMdCss\n};\n\nexport { InfiniteScroll as ion_infinite_scroll, InfiniteScrollContent as ion_infinite_scroll_content };\n"],"names":["r","registerInstance","d","createEvent","w","writeTask","e","readTask","h","f","getElement","H","Host","findClosestIonContent","p","printIonContentErrorMsg","g","getScrollElement","b","getIonMode","c","config","E","ENABLE_HTML_CONTENT_DEFAULT","a","sanitizeDOMString","infiniteScrollCss","InfiniteScroll","constructor","hostRef","ionInfinite","thrPx","thrPc","didFire","isBusy","onScroll","scrollEl","canStart","infiniteHeight","el","offsetHeight","scrollTop","scrollHeight","height","threshold","distanceFromInfinite","position","isLoading","emit","disabled","thresholdChanged","val","lastIndexOf","parseFloat","disabledChanged","enableScrollEvents","connectedCallback","contentEl","clientHeight","disconnectedCallback","undefined","complete","prev","requestAnimationFrame","newScrollTop","shouldListen","addEventListener","removeEventListener","render","mode","class","watchers","style","infiniteScrollContentIosCss","infiniteScrollContentMdCss","InfiniteScrollContent","customHTMLEnabled","get","loadingSpinner","loadingText","componentDidLoad","renderLoadingText","innerHTML","name","ios","md","ion_infinite_scroll","ion_infinite_scroll_content"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}