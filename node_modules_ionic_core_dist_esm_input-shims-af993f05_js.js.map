{"version":3,"file":"node_modules_ionic_core_dist_esm_input-shims-af993f05_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/input-shims-af993f05.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { g as getScrollElement, c as scrollByPoint, f as findClosestIonContent } from './index-746a238e.js';\nimport { a as addEventListener, b as removeEventListener, r as raf, c as componentOnReady } from './helpers-3379ba19.js';\nimport { a as KeyboardResize, K as Keyboard } from './keyboard-b063f012.js';\nimport './index-595d62c9.js';\nimport './capacitor-b4979570.js';\nimport './index-7a14ecec.js';\n\nconst cloneMap = new WeakMap();\nconst relocateInput = (componentEl, inputEl, shouldRelocate, inputRelativeY = 0, disabledClonedInput = false) => {\n  if (cloneMap.has(componentEl) === shouldRelocate) {\n    return;\n  }\n  if (shouldRelocate) {\n    addClone(componentEl, inputEl, inputRelativeY, disabledClonedInput);\n  }\n  else {\n    removeClone(componentEl, inputEl);\n  }\n};\n// TODO(FW-2832): type\nconst isFocused = (input) => {\n  return input === input.getRootNode().activeElement;\n};\nconst addClone = (componentEl, inputEl, inputRelativeY, disabledClonedInput = false) => {\n  // this allows for the actual input to receive the focus from\n  // the user's touch event, but before it receives focus, it\n  // moves the actual input to a location that will not screw\n  // up the app's layout, and does not allow the native browser\n  // to attempt to scroll the input into place (messing up headers/footers)\n  // the cloned input fills the area of where native input should be\n  // while the native input fakes out the browser by relocating itself\n  // before it receives the actual focus event\n  // We hide the focused input (with the visible caret) invisible by making it scale(0),\n  const parentEl = inputEl.parentNode;\n  // DOM WRITES\n  const clonedEl = inputEl.cloneNode(false);\n  clonedEl.classList.add('cloned-input');\n  clonedEl.tabIndex = -1;\n  /**\n   * Making the cloned input disabled prevents\n   * Chrome for Android from still scrolling\n   * the entire page since this cloned input\n   * will briefly be hidden by the keyboard\n   * even though it is not focused.\n   *\n   * This is not needed on iOS. While this\n   * does not cause functional issues on iOS,\n   * the input still appears slightly dimmed even\n   * if we set opacity: 1.\n   */\n  if (disabledClonedInput) {\n    clonedEl.disabled = true;\n  }\n  parentEl.appendChild(clonedEl);\n  cloneMap.set(componentEl, clonedEl);\n  const doc = componentEl.ownerDocument;\n  const tx = doc.dir === 'rtl' ? 9999 : -9999;\n  componentEl.style.pointerEvents = 'none';\n  inputEl.style.transform = `translate3d(${tx}px,${inputRelativeY}px,0) scale(0)`;\n};\nconst removeClone = (componentEl, inputEl) => {\n  const clone = cloneMap.get(componentEl);\n  if (clone) {\n    cloneMap.delete(componentEl);\n    clone.remove();\n  }\n  componentEl.style.pointerEvents = '';\n  inputEl.style.transform = '';\n};\n/**\n * Factoring in 50px gives us some room\n * in case the keyboard shows password/autofill bars\n * asynchronously.\n */\nconst SCROLL_AMOUNT_PADDING = 50;\n\nconst enableHideCaretOnScroll = (componentEl, inputEl, scrollEl) => {\n  if (!scrollEl || !inputEl) {\n    return () => {\n      return;\n    };\n  }\n  const scrollHideCaret = (shouldHideCaret) => {\n    if (isFocused(inputEl)) {\n      relocateInput(componentEl, inputEl, shouldHideCaret);\n    }\n  };\n  const onBlur = () => relocateInput(componentEl, inputEl, false);\n  const hideCaret = () => scrollHideCaret(true);\n  const showCaret = () => scrollHideCaret(false);\n  addEventListener(scrollEl, 'ionScrollStart', hideCaret);\n  addEventListener(scrollEl, 'ionScrollEnd', showCaret);\n  inputEl.addEventListener('blur', onBlur);\n  return () => {\n    removeEventListener(scrollEl, 'ionScrollStart', hideCaret);\n    removeEventListener(scrollEl, 'ionScrollEnd', showCaret);\n    inputEl.removeEventListener('blur', onBlur);\n  };\n};\n\nconst SKIP_SELECTOR = 'input, textarea, [no-blur], [contenteditable]';\nconst enableInputBlurring = () => {\n  let focused = true;\n  let didScroll = false;\n  const doc = document;\n  const onScroll = () => {\n    didScroll = true;\n  };\n  const onFocusin = () => {\n    focused = true;\n  };\n  const onTouchend = (ev) => {\n    // if app did scroll return early\n    if (didScroll) {\n      didScroll = false;\n      return;\n    }\n    const active = doc.activeElement;\n    if (!active) {\n      return;\n    }\n    // only blur if the active element is a text-input or a textarea\n    if (active.matches(SKIP_SELECTOR)) {\n      return;\n    }\n    // if the selected target is the active element, do not blur\n    const tapped = ev.target;\n    if (tapped === active) {\n      return;\n    }\n    if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n      return;\n    }\n    focused = false;\n    // TODO FW-2796: find a better way, why 50ms?\n    setTimeout(() => {\n      if (!focused) {\n        active.blur();\n      }\n    }, 50);\n  };\n  addEventListener(doc, 'ionScrollStart', onScroll);\n  doc.addEventListener('focusin', onFocusin, true);\n  doc.addEventListener('touchend', onTouchend, false);\n  return () => {\n    removeEventListener(doc, 'ionScrollStart', onScroll, true);\n    doc.removeEventListener('focusin', onFocusin, true);\n    doc.removeEventListener('touchend', onTouchend, false);\n  };\n};\n\nconst SCROLL_ASSIST_SPEED = 0.3;\nconst getScrollData = (componentEl, contentEl, keyboardHeight) => {\n  var _a;\n  const itemEl = (_a = componentEl.closest('ion-item,[ion-item]')) !== null && _a !== void 0 ? _a : componentEl;\n  return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight // TODO(FW-2832): type\n  );\n};\nconst calcScrollData = (inputRect, contentRect, keyboardHeight, platformHeight) => {\n  // compute input's Y values relative to the body\n  const inputTop = inputRect.top;\n  const inputBottom = inputRect.bottom;\n  // compute visible area\n  const visibleAreaTop = contentRect.top;\n  const visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n  // compute safe area\n  const safeAreaTop = visibleAreaTop + 15;\n  const safeAreaBottom = visibleAreaBottom - SCROLL_AMOUNT_PADDING;\n  // figure out if each edge of the input is within the safe area\n  const distanceToBottom = safeAreaBottom - inputBottom;\n  const distanceToTop = safeAreaTop - inputTop;\n  // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n  const desiredScrollAmount = Math.round(distanceToBottom < 0 ? -distanceToBottom : distanceToTop > 0 ? -distanceToTop : 0);\n  // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n  // gets focus, so make sure we don't scroll the input above the visible area\n  const scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n  const distance = Math.abs(scrollAmount);\n  const duration = distance / SCROLL_ASSIST_SPEED;\n  const scrollDuration = Math.min(400, Math.max(150, duration));\n  return {\n    scrollAmount,\n    scrollDuration,\n    scrollPadding: keyboardHeight,\n    inputSafeY: -(inputTop - safeAreaTop) + 4,\n  };\n};\n\nconst PADDING_TIMER_KEY = '$ionPaddingTimer';\n/**\n * Scroll padding adds additional padding to the bottom\n * of ion-content so that there is enough scroll space\n * for an input to be scrolled above the keyboard. This\n * is needed in environments where the webview does not\n * resize when the keyboard opens.\n *\n * Example: If an input at the bottom of ion-content is\n * focused, there is no additional scrolling space below\n * it, so the input cannot be scrolled above the keyboard.\n * Scroll padding fixes this by adding padding equal to the\n * height of the keyboard to the bottom of the content.\n *\n * Common environments where this is needed:\n * - Mobile Safari: The keyboard overlays the content\n * - Capacitor/Cordova on iOS: The keyboard overlays the content\n * when the KeyboardResize mode is set to 'none'.\n */\nconst setScrollPadding = (contentEl, paddingAmount, clearCallback) => {\n  const timer = contentEl[PADDING_TIMER_KEY];\n  if (timer) {\n    clearTimeout(timer);\n  }\n  if (paddingAmount > 0) {\n    contentEl.style.setProperty('--keyboard-offset', `${paddingAmount}px`);\n  }\n  else {\n    contentEl[PADDING_TIMER_KEY] = setTimeout(() => {\n      contentEl.style.setProperty('--keyboard-offset', '0px');\n      if (clearCallback) {\n        clearCallback();\n      }\n    }, 120);\n  }\n};\n/**\n * When an input is about to be focused,\n * set a timeout to clear any scroll padding\n * on the content. Note: The clearing\n * is done on a timeout so that if users\n * are moving focus from one input to the next\n * then re-adding scroll padding to the new\n * input with cancel the timeout to clear the\n * scroll padding.\n */\nconst setClearScrollPaddingListener = (inputEl, contentEl, doneCallback) => {\n  const clearScrollPadding = () => {\n    if (contentEl) {\n      setScrollPadding(contentEl, 0, doneCallback);\n    }\n  };\n  inputEl.addEventListener('focusout', clearScrollPadding, { once: true });\n};\n\nlet currentPadding = 0;\nconst SKIP_SCROLL_ASSIST = 'data-ionic-skip-scroll-assist';\nconst enableScrollAssist = (componentEl, inputEl, contentEl, footerEl, keyboardHeight, enableScrollPadding, keyboardResize, disableClonedInput = false) => {\n  /**\n   * Scroll padding should only be added if:\n   * 1. The global scrollPadding config option\n   * is set to true.\n   * 2. The native keyboard resize mode is either \"none\"\n   * (keyboard overlays webview) or undefined (resize\n   * information unavailable)\n   * Resize info is available on Capacitor 4+\n   */\n  const addScrollPadding = enableScrollPadding && (keyboardResize === undefined || keyboardResize.mode === KeyboardResize.None);\n  /**\n   * When the input is about to receive\n   * focus, we need to move it to prevent\n   * mobile Safari from adjusting the viewport.\n   */\n  const focusIn = async () => {\n    /**\n     * Scroll assist should not run again\n     * on inputs that have been manually\n     * focused inside of the scroll assist\n     * implementation.\n     */\n    if (inputEl.hasAttribute(SKIP_SCROLL_ASSIST)) {\n      inputEl.removeAttribute(SKIP_SCROLL_ASSIST);\n      return;\n    }\n    jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight, addScrollPadding, disableClonedInput);\n  };\n  componentEl.addEventListener('focusin', focusIn, true);\n  return () => {\n    componentEl.removeEventListener('focusin', focusIn, true);\n  };\n};\n/**\n * Use this function when you want to manually\n * focus an input but not have scroll assist run again.\n */\nconst setManualFocus = (el) => {\n  /**\n   * If element is already focused then\n   * a new focusin event will not be dispatched\n   * to remove the SKIL_SCROLL_ASSIST attribute.\n   */\n  if (document.activeElement === el) {\n    return;\n  }\n  el.setAttribute(SKIP_SCROLL_ASSIST, 'true');\n  el.focus();\n};\nconst jsSetFocus = async (componentEl, inputEl, contentEl, footerEl, keyboardHeight, enableScrollPadding, disableClonedInput = false) => {\n  if (!contentEl && !footerEl) {\n    return;\n  }\n  const scrollData = getScrollData(componentEl, (contentEl || footerEl), keyboardHeight);\n  if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\n    // the text input is in a safe position that doesn't\n    // require it to be scrolled into view, just set focus now\n    setManualFocus(inputEl);\n    /**\n     * Even though the input does not need\n     * scroll assist, we should preserve the\n     * the scroll padding as users could be moving\n     * focus from an input that needs scroll padding\n     * to an input that does not need scroll padding.\n     * If we remove the scroll padding now, users will\n     * see the page jump.\n     */\n    if (enableScrollPadding && contentEl !== null) {\n      setScrollPadding(contentEl, currentPadding);\n      setClearScrollPaddingListener(inputEl, contentEl, () => (currentPadding = 0));\n    }\n    return;\n  }\n  // temporarily move the focus to the focus holder so the browser\n  // doesn't freak out while it's trying to get the input in place\n  // at this point the native text input still does not have focus\n  relocateInput(componentEl, inputEl, true, scrollData.inputSafeY, disableClonedInput);\n  setManualFocus(inputEl);\n  /**\n   * Relocating/Focusing input causes the\n   * click event to be cancelled, so\n   * manually fire one here.\n   */\n  raf(() => componentEl.click());\n  /**\n   * If enabled, we can add scroll padding to\n   * the bottom of the content so that scroll assist\n   * has enough room to scroll the input above\n   * the keyboard.\n   */\n  if (enableScrollPadding && contentEl) {\n    currentPadding = scrollData.scrollPadding;\n    setScrollPadding(contentEl, currentPadding);\n  }\n  if (typeof window !== 'undefined') {\n    let scrollContentTimeout;\n    const scrollContent = async () => {\n      // clean up listeners and timeouts\n      if (scrollContentTimeout !== undefined) {\n        clearTimeout(scrollContentTimeout);\n      }\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.removeEventListener('ionKeyboardDidShow', scrollContent);\n      // scroll the input into place\n      if (contentEl) {\n        await scrollByPoint(contentEl, 0, scrollData.scrollAmount, scrollData.scrollDuration);\n      }\n      // the scroll view is in the correct position now\n      // give the native text input focus\n      relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n      // ensure this is the focused input\n      setManualFocus(inputEl);\n      /**\n       * When the input is about to be blurred\n       * we should set a timeout to remove\n       * any scroll padding.\n       */\n      if (enableScrollPadding) {\n        setClearScrollPaddingListener(inputEl, contentEl, () => (currentPadding = 0));\n      }\n    };\n    const doubleKeyboardEventListener = () => {\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.addEventListener('ionKeyboardDidShow', scrollContent);\n    };\n    if (contentEl) {\n      const scrollEl = await getScrollElement(contentEl);\n      /**\n       * scrollData will only consider the amount we need\n       * to scroll in order to properly bring the input\n       * into view. It will not consider the amount\n       * we can scroll in the content element.\n       * As a result, scrollData may request a greater\n       * scroll position than is currently available\n       * in the DOM. If this is the case, we need to\n       * wait for the webview to resize/the keyboard\n       * to show in order for additional scroll\n       * bandwidth to become available.\n       */\n      const totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\n      if (scrollData.scrollAmount > totalScrollAmount - scrollEl.scrollTop) {\n        /**\n         * On iOS devices, the system will show a \"Passwords\" bar above the keyboard\n         * after the initial keyboard is shown. This prevents the webview from resizing\n         * until the \"Passwords\" bar is shown, so we need to wait for that to happen first.\n         */\n        if (inputEl.type === 'password') {\n          // Add 50px to account for the \"Passwords\" bar\n          scrollData.scrollAmount += SCROLL_AMOUNT_PADDING;\n          window.addEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n        }\n        else {\n          window.addEventListener('ionKeyboardDidShow', scrollContent);\n        }\n        /**\n         * This should only fire in 2 instances:\n         * 1. The app is very slow.\n         * 2. The app is running in a browser on an old OS\n         * that does not support Ionic Keyboard Events\n         */\n        scrollContentTimeout = setTimeout(scrollContent, 1000);\n        return;\n      }\n    }\n    scrollContent();\n  }\n};\n\nconst INPUT_BLURRING = true;\nconst startInputShims = async (config, platform) => {\n  const doc = document;\n  const isIOS = platform === 'ios';\n  const isAndroid = platform === 'android';\n  /**\n   * Hide Caret and Input Blurring are needed on iOS.\n   * Scroll Assist and Scroll Padding are needed on iOS and Android\n   * with Chrome web browser (not Chrome webview).\n   */\n  const keyboardHeight = config.getNumber('keyboardHeight', 290);\n  const scrollAssist = config.getBoolean('scrollAssist', true);\n  const hideCaret = config.getBoolean('hideCaretOnScroll', isIOS);\n  const inputBlurring = config.getBoolean('inputBlurring', isIOS);\n  const scrollPadding = config.getBoolean('scrollPadding', true);\n  const inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n  const hideCaretMap = new WeakMap();\n  const scrollAssistMap = new WeakMap();\n  /**\n   * Grab the native keyboard resize configuration\n   * and pass it to scroll assist. Scroll assist requires\n   * that we adjust the input right before the input\n   * is about to be focused. If we called `Keyboard.getResizeMode`\n   * on focusin in scroll assist, we could potentially adjust the\n   * input too late since this call is async.\n   */\n  const keyboardResizeMode = await Keyboard.getResizeMode();\n  const registerInput = async (componentEl) => {\n    await new Promise((resolve) => componentOnReady(componentEl, resolve));\n    const inputRoot = componentEl.shadowRoot || componentEl;\n    const inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\n    const scrollEl = findClosestIonContent(componentEl);\n    const footerEl = !scrollEl ? componentEl.closest('ion-footer') : null;\n    if (!inputEl) {\n      return;\n    }\n    if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n      const rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n      hideCaretMap.set(componentEl, rmFn);\n    }\n    /**\n     * date/datetime-locale inputs on mobile devices show date picker\n     * overlays instead of keyboards. As a result, scroll assist is\n     * not needed. This also works around a bug in iOS <16 where\n     * scroll assist causes the browser to lock up. See FW-1997.\n     */\n    const isDateInput = inputEl.type === 'date' || inputEl.type === 'datetime-local';\n    if (!isDateInput &&\n      (!!scrollEl || !!footerEl) &&\n      scrollAssist &&\n      !scrollAssistMap.has(componentEl)) {\n      const rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight, scrollPadding, keyboardResizeMode, isAndroid);\n      scrollAssistMap.set(componentEl, rmFn);\n    }\n  };\n  const unregisterInput = (componentEl) => {\n    if (hideCaret) {\n      const fn = hideCaretMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      hideCaretMap.delete(componentEl);\n    }\n    if (scrollAssist) {\n      const fn = scrollAssistMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      scrollAssistMap.delete(componentEl);\n    }\n  };\n  if (inputBlurring && INPUT_BLURRING) {\n    enableInputBlurring();\n  }\n  // Input might be already loaded in the DOM before ion-device-hacks did.\n  // At this point we need to look for all of the inputs not registered yet\n  // and register them.\n  for (const input of inputs) {\n    registerInput(input);\n  }\n  // TODO(FW-2832): types\n  doc.addEventListener('ionInputDidLoad', ((ev) => {\n    registerInput(ev.detail);\n  }));\n  doc.addEventListener('ionInputDidUnload', ((ev) => {\n    unregisterInput(ev.detail);\n  }));\n};\n\nexport { startInputShims };\n"],"names":["g","getScrollElement","c","scrollByPoint","f","findClosestIonContent","a","addEventListener","b","removeEventListener","r","raf","componentOnReady","KeyboardResize","K","Keyboard","cloneMap","WeakMap","relocateInput","componentEl","inputEl","shouldRelocate","inputRelativeY","disabledClonedInput","has","addClone","removeClone","isFocused","input","getRootNode","activeElement","parentEl","parentNode","clonedEl","cloneNode","classList","add","tabIndex","disabled","appendChild","set","doc","ownerDocument","tx","dir","style","pointerEvents","transform","clone","get","delete","remove","SCROLL_AMOUNT_PADDING","enableHideCaretOnScroll","scrollEl","scrollHideCaret","shouldHideCaret","onBlur","hideCaret","showCaret","SKIP_SELECTOR","enableInputBlurring","focused","didScroll","document","onScroll","onFocusin","onTouchend","ev","active","matches","tapped","target","closest","setTimeout","blur","SCROLL_ASSIST_SPEED","getScrollData","contentEl","keyboardHeight","_a","itemEl","calcScrollData","getBoundingClientRect","defaultView","innerHeight","inputRect","contentRect","platformHeight","inputTop","top","inputBottom","bottom","visibleAreaTop","visibleAreaBottom","Math","min","safeAreaTop","safeAreaBottom","distanceToBottom","distanceToTop","desiredScrollAmount","round","scrollAmount","distance","abs","duration","scrollDuration","max","scrollPadding","inputSafeY","PADDING_TIMER_KEY","setScrollPadding","paddingAmount","clearCallback","timer","clearTimeout","setProperty","setClearScrollPaddingListener","doneCallback","clearScrollPadding","once","currentPadding","SKIP_SCROLL_ASSIST","enableScrollAssist","footerEl","enableScrollPadding","keyboardResize","disableClonedInput","addScrollPadding","undefined","mode","None","focusIn","hasAttribute","removeAttribute","jsSetFocus","setManualFocus","el","setAttribute","focus","scrollData","click","window","scrollContentTimeout","scrollContent","doubleKeyboardEventListener","totalScrollAmount","scrollHeight","clientHeight","scrollTop","type","INPUT_BLURRING","startInputShims","config","platform","isIOS","isAndroid","getNumber","scrollAssist","getBoolean","inputBlurring","inputs","Array","from","querySelectorAll","hideCaretMap","scrollAssistMap","keyboardResizeMode","getResizeMode","registerInput","Promise","resolve","inputRoot","shadowRoot","querySelector","rmFn","isDateInput","unregisterInput","fn","detail"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}