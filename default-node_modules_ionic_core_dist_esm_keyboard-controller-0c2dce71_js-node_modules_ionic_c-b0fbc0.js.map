{"version":3,"file":"default-node_modules_ionic_core_dist_esm_keyboard-controller-0c2dce71_js-node_modules_ionic_c-b0fbc0.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/capacitor-b4979570.js","./node_modules/@ionic/core/dist/esm/keyboard-b063f012.js","./node_modules/@ionic/core/dist/esm/keyboard-controller-0c2dce71.js","./node_modules/@ionic/core/dist/esm/theme-17531cdf.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as win } from './index-7a14ecec.js';\n\nconst getCapacitor = () => {\n  if (win !== undefined) {\n    return win.Capacitor;\n  }\n  return undefined;\n};\n\nexport { getCapacitor as g };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { g as getCapacitor } from './capacitor-b4979570.js';\n\nvar ExceptionCode;\n(function (ExceptionCode) {\n  /**\n   * API is not implemented.\n   *\n   * This usually means the API can't be used because it is not implemented for\n   * the current platform.\n   */\n  ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n  /**\n   * API is not available.\n   *\n   * This means the API can't be used right now because:\n   *   - it is currently missing a prerequisite, such as network connectivity\n   *   - it requires a particular platform or browser version\n   */\n  ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\n\nvar KeyboardResize;\n(function (KeyboardResize) {\n  /**\n   * Only the `body` HTML element will be resized.\n   * Relative units are not affected, because the viewport does not change.\n   *\n   * @since 1.0.0\n   */\n  KeyboardResize[\"Body\"] = \"body\";\n  /**\n   * Only the `ion-app` HTML element will be resized.\n   * Use it only for Ionic Framework apps.\n   *\n   * @since 1.0.0\n   */\n  KeyboardResize[\"Ionic\"] = \"ionic\";\n  /**\n   * The whole native Web View will be resized when the keyboard shows/hides.\n   * This affects the `vh` relative unit.\n   *\n   * @since 1.0.0\n   */\n  KeyboardResize[\"Native\"] = \"native\";\n  /**\n   * Neither the app nor the Web View are resized.\n   *\n   * @since 1.0.0\n   */\n  KeyboardResize[\"None\"] = \"none\";\n})(KeyboardResize || (KeyboardResize = {}));\nconst Keyboard = {\n  getEngine() {\n    const capacitor = getCapacitor();\n    if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('Keyboard')) {\n      return capacitor.Plugins.Keyboard;\n    }\n    return undefined;\n  },\n  getResizeMode() {\n    const engine = this.getEngine();\n    if (!(engine === null || engine === void 0 ? void 0 : engine.getResizeMode)) {\n      return Promise.resolve(undefined);\n    }\n    return engine.getResizeMode().catch((e) => {\n      if (e.code === ExceptionCode.Unimplemented) {\n        // If the native implementation is not available\n        // we treat it the same as if the plugin is not available.\n        return undefined;\n      }\n      throw e;\n    });\n  },\n};\n\nexport { Keyboard as K, KeyboardResize as a };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as win, d as doc } from './index-7a14ecec.js';\nimport { K as Keyboard, a as KeyboardResize } from './keyboard-b063f012.js';\n\n/**\n * The element that resizes when the keyboard opens\n * is going to depend on the resize mode\n * which is why we check that here.\n */\nconst getResizeContainer = (resizeMode) => {\n  /**\n   * If doc is undefined then we are\n   * in an SSR environment, so the keyboard\n   * adjustment does not apply.\n   * If the webview does not resize then there\n   * is no container to resize.\n   */\n  if (doc === undefined || resizeMode === KeyboardResize.None || resizeMode === undefined) {\n    return null;\n  }\n  /**\n   * The three remaining resize modes: Native, Ionic, and Body\n   * all cause `ion-app` to resize, so we can listen for changes\n   * on that. In the event `ion-app` is not available then\n   * we can fall back to `body`.\n   */\n  const ionApp = doc.querySelector('ion-app');\n  return ionApp !== null && ionApp !== void 0 ? ionApp : doc.body;\n};\n/**\n * Get the height of ion-app or body.\n * This is used for determining if the webview\n * has resized before the keyboard closed.\n * */\nconst getResizeContainerHeight = (resizeMode) => {\n  const containerElement = getResizeContainer(resizeMode);\n  return containerElement === null ? 0 : containerElement.clientHeight;\n};\n/**\n * Creates a controller that tracks and reacts to opening or closing the keyboard.\n *\n * @internal\n * @param keyboardChangeCallback A function to call when the keyboard opens or closes.\n */\nconst createKeyboardController = async (keyboardChangeCallback) => {\n  let keyboardWillShowHandler;\n  let keyboardWillHideHandler;\n  let keyboardVisible;\n  /**\n   * This lets us determine if the webview content\n   * has resized as a result of the keyboard.\n   */\n  let initialResizeContainerHeight;\n  const init = async () => {\n    const resizeOptions = await Keyboard.getResizeMode();\n    const resizeMode = resizeOptions === undefined ? undefined : resizeOptions.mode;\n    keyboardWillShowHandler = () => {\n      /**\n       * We need to compute initialResizeContainerHeight right before\n       * the keyboard opens to guarantee the resize container is visible.\n       * The resize container may not be visible if we compute this\n       * as soon as the keyboard controller is created.\n       * We should only need to do this once to avoid additional clientHeight\n       * computations.\n       */\n      if (initialResizeContainerHeight === undefined) {\n        initialResizeContainerHeight = getResizeContainerHeight(resizeMode);\n      }\n      keyboardVisible = true;\n      fireChangeCallback(keyboardVisible, resizeMode);\n    };\n    keyboardWillHideHandler = () => {\n      keyboardVisible = false;\n      fireChangeCallback(keyboardVisible, resizeMode);\n    };\n    win === null || win === void 0 ? void 0 : win.addEventListener('keyboardWillShow', keyboardWillShowHandler);\n    win === null || win === void 0 ? void 0 : win.addEventListener('keyboardWillHide', keyboardWillHideHandler);\n  };\n  const fireChangeCallback = (state, resizeMode) => {\n    if (keyboardChangeCallback) {\n      keyboardChangeCallback(state, createResizePromiseIfNeeded(resizeMode));\n    }\n  };\n  /**\n   * Code responding to keyboard lifecycles may need\n   * to show/hide content once the webview has\n   * resized as a result of the keyboard showing/hiding.\n   * createResizePromiseIfNeeded provides a way for code to wait for the\n   * resize event that was triggered as a result of the keyboard.\n   */\n  const createResizePromiseIfNeeded = (resizeMode) => {\n    if (\n    /**\n     * If we are in an SSR environment then there is\n     * no window to resize. Additionally, if there\n     * is no resize mode or the resize mode is \"None\"\n     * then initialResizeContainerHeight will be 0\n     */\n    initialResizeContainerHeight === 0 ||\n      /**\n       * If the keyboard is closed before the webview resizes initially\n       * then the webview will never resize.\n       */\n      initialResizeContainerHeight === getResizeContainerHeight(resizeMode)) {\n      return;\n    }\n    /**\n     * Get the resize container so we can\n     * attach the ResizeObserver below to\n     * the correct element.\n     */\n    const containerElement = getResizeContainer(resizeMode);\n    if (containerElement === null) {\n      return;\n    }\n    /**\n     * Some part of the web content should resize,\n     * and we need to listen for a resize.\n     */\n    return new Promise((resolve) => {\n      const callback = () => {\n        /**\n         * As per the spec, the ResizeObserver\n         * will fire when observation starts if\n         * the observed element is rendered and does not\n         * have a size of 0 x 0. However, the watched element\n         * may or may not have resized by the time this first\n         * callback is fired. As a result, we need to check\n         * the dimensions of the element.\n         *\n         * https://www.w3.org/TR/resize-observer/#intro\n         */\n        if (containerElement.clientHeight === initialResizeContainerHeight) {\n          /**\n           * The resize happened, so stop listening\n           * for resize on this element.\n           */\n          ro.disconnect();\n          resolve();\n        }\n      };\n      /**\n       * In Capacitor there can be delay between when the window\n       * resizes and when the container element resizes, so we cannot\n       * rely on a 'resize' event listener on the window.\n       * Instead, we need to determine when the container\n       * element resizes using a ResizeObserver.\n       */\n      const ro = new ResizeObserver(callback);\n      ro.observe(containerElement);\n    });\n  };\n  const destroy = () => {\n    win === null || win === void 0 ? void 0 : win.removeEventListener('keyboardWillShow', keyboardWillShowHandler);\n    win === null || win === void 0 ? void 0 : win.removeEventListener('keyboardWillHide', keyboardWillHideHandler);\n    keyboardWillShowHandler = keyboardWillHideHandler = undefined;\n  };\n  const isKeyboardVisible = () => keyboardVisible;\n  await init();\n  return { init, destroy, isKeyboardVisible };\n};\n\nexport { createKeyboardController as c };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"names":["w","win","getCapacitor","undefined","Capacitor","g","ExceptionCode","KeyboardResize","Keyboard","getEngine","capacitor","isPluginAvailable","Plugins","getResizeMode","engine","Promise","resolve","catch","e","code","Unimplemented","K","a","d","doc","getResizeContainer","resizeMode","None","ionApp","querySelector","body","getResizeContainerHeight","containerElement","clientHeight","createKeyboardController","keyboardChangeCallback","keyboardWillShowHandler","keyboardWillHideHandler","keyboardVisible","initialResizeContainerHeight","init","resizeOptions","mode","fireChangeCallback","addEventListener","state","createResizePromiseIfNeeded","callback","ro","disconnect","ResizeObserver","observe","destroy","removeEventListener","isKeyboardVisible","c","hostContext","selector","el","closest","createColorClasses","color","cssClassMap","length","Object","assign","getClassList","classes","array","Array","isArray","split","filter","map","trim","getClassMap","forEach","SCHEME","openURL","url","ev","direction","animation","test","router","document","preventDefault","push","h","o"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3]}