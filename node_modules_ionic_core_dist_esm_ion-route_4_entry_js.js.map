{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-route_4_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js","./node_modules/@ionic/core/dist/esm/theme-17531cdf.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, f as getElement, h, H as Host } from './index-adfb2000.js';\nimport { c as componentOnReady, q as debounce } from './helpers-3379ba19.js';\nimport { o as openURL, c as createColorClasses } from './theme-17531cdf.js';\nimport { b as getIonMode } from './ionic-global-9080266a.js';\n\nconst Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    this.url = '';\n    this.component = undefined;\n    this.componentProps = undefined;\n    this.beforeLeave = undefined;\n    this.beforeEnter = undefined;\n  }\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n  static get watchers() { return {\n    \"url\": [\"onUpdate\"],\n    \"component\": [\"onUpdate\"],\n    \"componentProps\": [\"onComponentProps\"]\n  }; }\n};\n\nconst RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n    this.from = undefined;\n    this.to = undefined;\n  }\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  static get watchers() { return {\n    \"from\": [\"propDidChange\"],\n    \"to\": [\"propDidChange\"]\n  }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\n/** Join the non empty segments with \"/\". */\nconst generatePath = (segments) => {\n  const path = segments.filter((s) => s.length > 0).join('/');\n  return '/' + path;\n};\nconst generateUrl = (segments, useHash, queryString) => {\n  let url = generatePath(segments);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url += '?' + queryString;\n  }\n  return url;\n};\nconst writeSegments = (history, root, useHash, segments, direction, state, queryString) => {\n  const url = generateUrl([...parsePath(root).segments, ...segments], useHash, queryString);\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\n/**\n * Transforms a chain to a list of segments.\n *\n * Notes:\n * - parameter segments of the form :param are replaced with their value,\n * - null is returned when a value is missing for any parameter segment.\n */\nconst chainToSegments = (chain) => {\n  const segments = [];\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        segments.push(param);\n      }\n      else if (segment !== '') {\n        segments.push(segment);\n      }\n    }\n  }\n  return segments;\n};\n/**\n * Removes the prefix segments from the path segments.\n *\n * Return:\n * - null when the path segments do not start with the passed prefix,\n * - the path segments after the prefix otherwise.\n */\nconst removePrefix = (prefix, segments) => {\n  if (prefix.length > segments.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return segments;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i] !== segments[i]) {\n      return null;\n    }\n  }\n  if (segments.length === prefix.length) {\n    return [''];\n  }\n  return segments.slice(prefix.length);\n};\nconst readSegments = (loc, root, useHash) => {\n  const prefix = parsePath(root).segments;\n  const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n  const segments = parsePath(pathname).segments;\n  return removePrefix(prefix, segments);\n};\n/**\n * Parses the path to:\n * - segments an array of '/' separated parts,\n * - queryString (undefined when no query string).\n */\nconst parsePath = (path) => {\n  let segments = [''];\n  let queryString;\n  if (path != null) {\n    const qsStart = path.indexOf('?');\n    if (qsStart > -1) {\n      queryString = path.substring(qsStart + 1);\n      path = path.substring(0, qsStart);\n    }\n    segments = path\n      .split('/')\n      .map((s) => s.trim())\n      .filter((s) => s.length > 0);\n    if (segments.length === 0) {\n      segments = [''];\n    }\n  }\n  return { segments, queryString };\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const segments = [];\n    chain.forEach((r) => segments.push(...r.segments));\n    const ids = chain.map((r) => r.id);\n    console.debug(`%c ${generatePath(segments)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\n/**\n * Activates the passed route chain.\n *\n * There must be exactly one outlet per route entry in the chain.\n *\n * The methods calls setRouteId on each of the outlet with the corresponding route entry in the chain.\n * setRouteId will create or select the view in the outlet.\n */\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await new Promise((resolve) => componentOnReady(outlet, resolve));\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\n/**\n * Recursively walks the outlet in the DOM.\n *\n * The function returns a list of RouteID corresponding to each of the outlet and the last outlet without a RouteID.\n */\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // eslint-disable-next-line no-cond-assign\n  while ((outlet = searchNavNode(node))) {\n    const id = await outlet.getRouteId();\n    if (id) {\n      node = id.element;\n      id.element = undefined;\n      ids.push(id);\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise((resolve) => {\n    window.addEventListener('ionNavWillLoad', () => resolve(), { once: true });\n  });\n};\n/** Selector for all the outlets supported by the router. */\nconst OUTLET_SELECTOR = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(OUTLET_SELECTOR)) {\n    return root;\n  }\n  const outlet = root.querySelector(OUTLET_SELECTOR);\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\n};\n\n/**\n * Returns whether the given redirect matches the given path segments.\n *\n * A redirect matches when the segments of the path and redirect.from are equal.\n * Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n * The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\n */\nconst matchesRedirect = (segments, redirect) => {\n  const { from, to } = redirect;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > segments.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== segments[i]) {\n      return false;\n    }\n  }\n  return from.length === segments.length;\n};\n/** Returns the first redirect matching the path segments or undefined when no match found. */\nconst findRouteRedirect = (segments, redirects) => {\n  return redirects.find((redirect) => matchesRedirect(segments, redirect));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let score = 0;\n  for (let i = 0; i < len; i++) {\n    const routeId = ids[i];\n    const routeChain = chain[i];\n    // Skip results where the route id does not match the chain at the same index\n    if (routeId.id.toLowerCase() !== routeChain.id) {\n      break;\n    }\n    if (routeId.params) {\n      const routeIdParams = Object.keys(routeId.params);\n      // Only compare routes with the chain that have the same number of parameters.\n      if (routeIdParams.length === routeChain.segments.length) {\n        // Maps the route's params into a path based on the path variable names,\n        // to compare against the route chain format.\n        //\n        // Before:\n        // ```ts\n        // {\n        //  params: {\n        //    s1: 'a',\n        //    s2: 'b'\n        //  }\n        // }\n        // ```\n        //\n        // After:\n        // ```ts\n        // [':s1',':s2']\n        // ```\n        //\n        const pathWithParams = routeIdParams.map((key) => `:${key}`);\n        for (let j = 0; j < pathWithParams.length; j++) {\n          // Skip results where the path variable is not a match\n          if (pathWithParams[j].toLowerCase() !== routeChain.segments[j]) {\n            break;\n          }\n          // Weight path matches for the same index higher.\n          score++;\n        }\n      }\n    }\n    // Weight id matches\n    score++;\n  }\n  return score;\n};\n/**\n * Matches the segments against the chain.\n *\n * Returns:\n * - null when there is no match,\n * - a chain with the params properties updated with the parameter segments on match.\n */\nconst matchesSegments = (segments, chain) => {\n  const inputSegments = new RouterSegments(segments);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const chainSegments = chain[i].segments;\n    if (chainSegments[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of chainSegments) {\n        const data = inputSegments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = matchesDefault ? matchesDefault === (inputSegments.next() === '') : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      segments: route.segments,\n      params: mergeParams(route.params, allparams[i]),\n      beforeEnter: route.beforeEnter,\n      beforeLeave: route.beforeLeave,\n    }));\n  }\n  return chain;\n};\n/**\n * Merges the route parameter objects.\n * Returns undefined when both parameters are undefined.\n */\nconst mergeParams = (a, b) => {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\n/**\n * Finds the best match for the ids in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the RouteIDs.\n * That is they contain both the componentProps of the <ion-route> and the parameter segment.\n */\nconst findChainForIDs = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  for (const chain of chains) {\n    const score = matchesIDs(ids, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => {\n      var _a;\n      return ({\n        id: route.id,\n        segments: route.segments,\n        params: mergeParams(route.params, (_a = ids[i]) === null || _a === void 0 ? void 0 : _a.params),\n      });\n    });\n  }\n  return null;\n};\n/**\n * Finds the best match for the segments in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the segments.\n * That is they contain both the componentProps of the <ion-route> and the parameter segments.\n */\nconst findChainForSegments = (segments, chains) => {\n  let match = null;\n  let bestScore = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesSegments(segments, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > bestScore) {\n        bestScore = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\n/**\n * Computes the priority of a chain.\n *\n * Parameter segments are given a lower priority over fixed segments.\n *\n * Considering the following 2 chains matching the path /path/to/page:\n * - /path/to/:where\n * - /path/to/page\n *\n * The second one will be given a higher priority because \"page\" is a fixed segment (vs \":where\", a parameter segment).\n */\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (segment !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(segments) {\n    this.segments = segments.slice();\n  }\n  next() {\n    if (this.segments.length > 0) {\n      return this.segments.shift();\n    }\n    return '';\n  }\n}\n\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\n/**\n * Extracts the redirects (that is <ion-route-redirect> elements inside the root).\n *\n * The redirects are returned as a list of RouteRedirect.\n */\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter((el) => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map((el) => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')).segments,\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\n/**\n * Extracts all the routes (that is <ion-route> elements inside the root).\n *\n * The routes are returned as a list of chains - the flattened tree.\n */\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\n/**\n * Reads the route nodes as a tree modeled after the DOM tree of <ion-route> elements.\n *\n * Note: routes without a component are ignored together with their children.\n */\nconst readRouteNodes = (node) => {\n  return Array.from(node.children)\n    .filter((el) => el.tagName === 'ION-ROUTE' && el.component)\n    .map((el) => {\n    const component = readProp(el, 'component');\n    return {\n      segments: parsePath(readProp(el, 'url')).segments,\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(el),\n    };\n  });\n};\n/**\n * Flattens a RouterTree in a list of chains.\n *\n * Each chain represents a path from the root node to a terminal node.\n */\nconst flattenRouterTree = (nodes) => {\n  const chains = [];\n  for (const node of nodes) {\n    flattenNode([], chains, node);\n  }\n  return chains;\n};\n/** Flattens a route node recursively and push each branch to the chains list. */\nconst flattenNode = (chain, chains, node) => {\n  chain = [\n    ...chain,\n    {\n      id: node.id,\n      segments: node.segments,\n      params: node.params,\n      beforeLeave: node.beforeLeave,\n      beforeEnter: node.beforeEnter,\n    },\n  ];\n  if (node.children.length === 0) {\n    chains.push(chain);\n    return;\n  }\n  for (const child of node.children) {\n    flattenNode(chain, chains, child);\n  }\n};\n\nconst Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    this.root = '/';\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    await waitUntilNavNode();\n    const canProceed = await this.runGuards(this.getSegments());\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        const { redirect } = canProceed;\n        const path = parsePath(redirect);\n        this.setSegments(path.segments, ROUTER_INTENT_NONE, path.queryString);\n        await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n      }\n    }\n    else {\n      await this.onRoutesChanged();\n    }\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let segments = this.getSegments();\n    const canProceed = await this.runGuards(segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        segments = parsePath(canProceed.redirect).segments;\n      }\n      else {\n        return false;\n      }\n    }\n    return this.writeNavStateRoot(segments, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, (processNextHandler) => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified path.\n   *\n   * @param path The path to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(path, direction = 'forward', animation) {\n    var _a;\n    if (path.startsWith('.')) {\n      const currentPath = (_a = this.previousPath) !== null && _a !== void 0 ? _a : '/';\n      // Convert currentPath to an URL by pre-pending a protocol and a host to resolve the relative path.\n      const url = new URL(path, `https://host/${currentPath}`);\n      path = url.pathname + url.search;\n    }\n    let parsedPath = parsePath(path);\n    const canProceed = await this.runGuards(parsedPath.segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        parsedPath = parsePath(canProceed.redirect);\n      }\n      else {\n        return false;\n      }\n    }\n    this.setSegments(parsedPath.segments, direction, parsedPath.queryString);\n    return this.writeNavStateRoot(parsedPath.segments, direction, animation);\n  }\n  /** Go back to previous page in the window.history. */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = findChainForIDs(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map((i) => i.id));\n      return false;\n    }\n    const segments = chainToSegments(chain);\n    if (!segments) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    this.setSegments(segments, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, segments, null, ids.length);\n    return true;\n  }\n  /** This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes. */\n  onRedirectChanged() {\n    const segments = this.getSegments();\n    if (segments && findRouteRedirect(segments, readRedirects(this.el))) {\n      this.writeNavStateRoot(segments, ROUTER_INTENT_NONE);\n    }\n  }\n  /** This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes. */\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getSegments(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    var _a;\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    return ROUTER_INTENT_NONE;\n  }\n  async writeNavStateRoot(segments, direction, animation) {\n    if (!segments) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = findRouteRedirect(segments, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      const { segments: toSegments, queryString } = redirect.to;\n      this.setSegments(toSegments, direction, queryString);\n      redirectFrom = redirect.from;\n      segments = toSegments;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = findChainForSegments(segments, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, segments, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, segments, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise((r) => (resolve = r));\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  /**\n   * Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n   *\n   * When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n   * Otherwise the beforeEnterHook hook of the target route is executed.\n   */\n  async runGuards(to = this.getSegments(), from) {\n    if (from === undefined) {\n      from = parsePath(this.previousPath).segments;\n    }\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const fromChain = findChainForSegments(from, routes);\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const toChain = findChainForSegments(to, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    return beforeEnterHook ? beforeEnterHook() : true;\n  }\n  async writeNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(segments, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setSegments(segments, direction, queryString) {\n    this.state++;\n    writeSegments(window.history, this.root, this.useHash, segments, direction, this.state, queryString);\n  }\n  getSegments() {\n    return readSegments(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(toSegments, redirectFromSegments) {\n    const from = this.previousPath;\n    const to = generatePath(toSegments);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromSegments ? generatePath(redirectFromSegments) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.onClick = (ev) => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n    this.color = undefined;\n    this.href = undefined;\n    this.rel = undefined;\n    this.routerDirection = 'forward';\n    this.routerAnimation = undefined;\n    this.target = undefined;\n  }\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target,\n    };\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true,\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n  }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"names":["r","registerInstance","d","createEvent","f","getElement","h","H","Host","c","componentOnReady","q","debounce","o","openURL","createColorClasses","b","getIonMode","Route","constructor","hostRef","ionRouteDataChanged","url","component","undefined","componentProps","beforeLeave","beforeEnter","onUpdate","newValue","emit","onComponentProps","oldValue","keys1","Object","keys","keys2","length","key","connectedCallback","watchers","RouteRedirect","ionRouteRedirectChanged","from","to","propDidChange","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","generateUrl","useHash","queryString","writeSegments","history","root","direction","state","parsePath","pushState","replaceState","chainToSegments","chain","route","segment","param","params","slice","push","removePrefix","prefix","i","readSegments","loc","pathname","hash","qsStart","indexOf","substring","split","map","trim","printRoutes","routes","console","group","forEach","ids","id","debug","groupEnd","printRedirects","redirects","redirect","writeNavState","index","changed","animation","outlet","searchNavNode","Promise","resolve","result","setRouteId","element","markVisible","e","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","window","addEventListener","once","OUTLET_SELECTOR","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","score","routeId","routeChain","toLowerCase","routeIdParams","pathWithParams","j","matchesSegments","inputSegments","RouterSegments","matchesDefault","allparams","chainSegments","data","next","mergeParams","a","assign","findChainForIDs","chains","match","maxMatches","_a","findChainForSegments","bestScore","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","nodes","flattenNode","child","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","componentWillLoad","canProceed","runGuards","getSegments","setSegments","writeNavStateRoot","onRoutesChanged","componentDidLoad","onRedirectChanged","bind","onPopState","historyDirection","onBackButton","ev","detail","register","processNextHandler","back","canTransition","startsWith","currentPath","URL","search","parsedPath","waitPromise","printDebug","navChanged","warn","safeWriteNavState","win","title","location","href","redirectFrom","toSegments","unlock","lock","p","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","routeEvent","routeChangeEvent","redirectFromSegments","redirectedFrom","routerLinkCss","RouterLink","onClick","routerDirection","routerAnimation","color","rel","target","render","mode","attrs","class","style","ion_route","ion_route_redirect","ion_router","ion_router_link","hostContext","selector","closest","cssClassMap","getClassList","classes","array","isArray","getClassMap","SCHEME","test","router","preventDefault","g"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}